package provide DS9 1.0

######
# Begin autogenerated taccle (version 1.3) routines.
# Although taccle itself is protected by the GNU Public License (GPL)
# all user-supplied functions are protected by their respective
# author's license.  See http://mini.net/tcl/taccle for other details.
######

namespace eval prism {
    variable yylval {}
    variable table
    variable rules
    variable token {}
    variable yycnt 0
    variable yyerr 0
    variable save_state 0

    namespace export yylex
}

proc prism::YYABORT {} {
    return -code return 1
}

proc prism::YYACCEPT {} {
    return -code return 0
}

proc prism::YYERROR {} {
    variable yyerr
    set yyerr 1
}

proc prism::yyclearin {} {
    variable token
    variable yycnt
    set token {}
    incr yycnt -1
}

proc prism::yyerror {s} {
    puts stderr $s
}

proc prism::setupvalues {stack pointer numsyms} {
    upvar 1 1 y
    set y {}
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        set y [lindex $stack $pointer]
        incr pointer
    }
}

proc prism::unsetupvalues {numsyms} {
    for {set i 1} {$i <= $numsyms} {incr i} {
        upvar 1 $i y
        unset y
    }
}

array set prism::table {
  30:259,target 31
  29:259,target 30
  15:259 reduce
  10:280,target 19
  31:0,target 24
  27:272,target 29
  27:282,target 31
  17:259 reduce
  0:259 shift
  0:260 shift
  32:282 goto
  15:0,target 18
  9:0 reduce
  6:259,target 15
  0:266,target 8
  0:261 shift
  20:259 shift
  19:259 reduce
  11:0 accept
  0:262 shift
  2:259 reduce
  0:263 shift
  18:259,target 21
  0:264 shift
  1:259,target 8
  4:259 shift
  12:276,target 20
  0:265 shift
  25:273,target 28
  15:0 reduce
  6:259 reduce
  0:266 shift
  13:259,target 16
  0:267 shift
  8:259 shift
  0:265,target 7
  0:268 shift
  33:259,target 26
  6:0,target 15
  0:275,target 11
  28:259 reduce
  19:0 reduce
  16:0,target 12
  2:0 reduce
  31:259 reduce
  9:259,target 7
  25:272,target 28
  33:259 reduce
  0:275 goto
  6:0 reduce
  0:264,target 6
  4:259,target 13
  0:277 goto
  33:0,target 26
  24:272 reduce
  28:0 reduce
  24:273 reduce
  16:259,target 12
  7:0,target 13
  28:270 shift
  28:269 shift
  26:272 reduce
  17:0,target 9
  12:0 reduce
  0:0,target 6
  28:271 shift
  26:273 reduce
  10:0,target 22
  33:0 reduce
  0:263,target 5
  31:259,target 24
  16:0 reduce
  10:259 shift
  7:259,target 13
  21:0 reduce
  12:259 reduce
  3:0 reduce
  32:273,target 30
  1:0,target 8
  28:281 goto
  20:259,target 22
  19:259,target 14
  14:259 reduce
  11:0,target 0
  0:262,target 4
  2:259,target 11
  28:271,target 26
  26:273,target 29
  16:259 reduce
  7:0 reduce
  28:281,target 32
  14:259,target 17
  18:259 shift
  1:259 reduce
  32:272,target 29
  30:0 reduce
  29:0 reduce
  21:259 shift
  3:259 reduce
  5:257 shift
  32:282,target 33
  13:0 reduce
  9:0,target 7
  0:261,target 3
  28:259,target 25
  23:259 shift
  19:0,target 14
  2:0,target 11
  5:259 shift
  28:270,target 25
  28:269,target 24
  26:272,target 29
  12:0,target 3
  7:259 reduce
  23:259,target 28
  17:0 reduce
  0:0 reduce
  5:259,target 15
  9:259 reduce
  12:276 goto
  30:259 reduce
  29:259 reduce
  17:259,target 9
  10:280 goto
  0:259,target 1
  0:260,target 2
  22:0 reduce
  21:270 shift
  21:269 shift
  28:0,target 25
  24:273,target 27
  21:271 shift
  21:0,target 23
  12:259,target 4
  3:0,target 10
  13:0,target 16
  21:271,target 26
  21:281,target 27
  10:0 reduce
  5:278,target 16
  25:272 reduce
  25:273 reduce
  8:259,target 17
  0:268,target 10
  31:0 reduce
  27:272 shift
  24:272,target 27
  27:273 shift
  14:0 reduce
  30:0,target 31
  29:0,target 30
  21:259,target 23
  21:281 goto
  3:259,target 10
  5:278 goto
  5:257,target 14
  22:0,target 5
  21:270,target 25
  21:269,target 24
  32:272 shift
  27:273,target 30
  14:0,target 17
  32:273 shift
  15:259,target 18
  1:0 reduce
  0:267,target 9
  0:277,target 12
  13:259 reduce
  10:259,target 18
  27:282 goto
}

array set prism::rules {
  27,l 281
  9,l 277
  11,l 277
  15,l 277
  20,l 279
  19,l 279
  2,l 274
  24,l 280
  6,l 277
  28,l 281
  12,l 277
  16,l 277
  21,l 279
  3,l 275
  25,l 280
  7,l 277
  30,l 282
  29,l 281
  13,l 277
  0,l 283
  17,l 278
  22,l 280
  4,l 276
  26,l 280
  8,l 277
  10,l 277
  31,l 282
  14,l 277
  18,l 278
  1,l 274
  23,l 280
  5,l 275
}

array set prism::rules {
  23,dc 2
  5,dc 3
  0,dc 1
  17,dc 1
  12,dc 2
  26,dc 6
  8,dc 1
  21,dc 3
  3,dc 1
  15,dc 1
  10,dc 1
  30,dc 1
  29,dc 1
  24,dc 4
  6,dc 0
  18,dc 1
  1,dc 1
  13,dc 1
  27,dc 1
  9,dc 2
  22,dc 0
  4,dc 0
  16,dc 2
  11,dc 1
  31,dc 1
  25,dc 4
  7,dc 1
  20,dc 2
  19,dc 1
  2,dc 1
  14,dc 2
  28,dc 1
}

array set prism::rules {
  13,line 52
  25,line 70
  7,line 46
  10,line 49
  22,line 67
  4,line 41
  18,line 59
  1,line 37
  31,line 80
  15,line 54
  27,line 74
  9,line 48
  12,line 51
  24,line 69
  6,line 45
  21,line 64
  3,line 41
  17,line 58
  4,e 1
  30,line 79
  29,line 76
  14,line 53
  26,line 71
  8,line 47
  11,line 50
  23,line 68
  5,line 42
  20,line 63
  19,line 62
  2,line 38
  16,line 55
  28,line 75
}

array set prism::lr1_table {
  14,trans {}
  33,trans {}
  1,trans {}
  18,trans {{259 21}}
  23,trans {{259 28}}
  5,trans {{257 14} {259 15} {278 16}}
  27,trans {{272 29} {273 30} {282 31}}
  9,trans {}
  13,trans {}
  32,trans {{272 29} {273 30} {282 33}}
  0,trans {{259 1} {260 2} {261 3} {262 4} {263 5} {264 6} {265 7} {266 8} {267 9} {268 10} {275 11} {277 12}}
  17,trans {}
  22,trans {}
  4,trans {{259 13}}
  26,trans {}
  8,trans {{259 17}}
  12,trans {{276 20}}
  31,trans {}
  16,trans {}
  21,trans {{259 23} {269 24} {270 25} {271 26} {281 27}}
  3,trans {}
  10 {{14 {0 259} 1} {22 {0 259} 0} {23 {0 259} 0} {24 {0 259} 0} {25 {0 259} 0} {26 {0 259} 0}}
  11 {{0 0 1}}
  25,trans {}
  12 {{3 0 1} {5 0 1} {4 259 0}}
  7,trans {}
  13 {{16 {0 259} 2}}
  14 {{17 {0 259} 1}}
  15 {{18 {0 259} 1}}
  11,trans {}
  30,trans {}
  29,trans {}
  16 {{12 {0 259} 2}}
  0 {{0 0 0} {3 0 0} {5 0 0} {6 {0 259} 0} {7 {0 259} 0} {8 {0 259} 0} {9 {0 259} 0} {10 {0 259} 0} {11 {0 259} 0} {12 {0 259} 0} {13 {0 259} 0} {14 {0 259} 0} {15 {0 259} 0} {16 {0 259} 0}}
  17 {{9 {0 259} 2}}
  1 {{8 {0 259} 1}}
  18 {{23 {0 259} 1} {24 {0 259} 1} {25 {0 259} 1} {26 {0 259} 1}}
  2 {{11 {0 259} 1}}
  19 {{14 {0 259} 2}}
  20 {{5 0 2}}
  15,trans {}
  3 {{10 {0 259} 1}}
  21 {{23 {0 259} 2} {24 {0 259} 2} {25 {0 259} 2} {26 {0 259} 2} {27 {272 273} 0} {28 {272 273} 0} {29 {272 273} 0}}
  4 {{16 {0 259} 1}}
  22 {{5 0 3}}
  5 {{12 {0 259} 1} {17 {0 259} 0} {18 {0 259} 0}}
  23 {{25 {0 259} 3} {26 {0 259} 3}}
  6 {{15 {0 259} 1}}
  2,trans {}
  19,trans {}
  20,trans {{259 22}}
  24 {{27 {272 273} 1}}
  7 {{13 {0 259} 1}}
  25 {{28 {272 273} 1}}
  8 {{9 {0 259} 1}}
  26 {{29 {272 273} 1}}
  27 {{24 {0 259} 3} {30 {0 259} 0} {31 {0 259} 0}}
  9 {{7 {0 259} 1}}
  24,trans {}
  28 {{25 {0 259} 4} {26 {0 259} 4} {27 {272 273} 0} {28 {272 273} 0} {29 {272 273} 0}}
  6,trans {}
  30 {{31 {0 259} 1}}
  29 {{30 {0 259} 1}}
  31 {{24 {0 259} 4}}
  32 {{26 {0 259} 5} {30 {0 259} 0} {31 {0 259} 0}}
  10,trans {{259 18} {280 19}}
  33 {{26 {0 259} 6}}
  28,trans {{269 24} {270 25} {271 26} {281 32}}
}

array set prism::token_id_table {
  280,title {}
  279,title {}
  264,line 18
  270,t 0
  269,t 0
  276,line 41
  265,title IMAGE
  274,t 1
  261,line 15
  257,t 0
  270,title BAR
  269,title LINE
  273,line 29
  278,t 1
  257,line 7
  262,t 0
  274,title {}
  283,t 1
  270,line 25
  269,line 24
  259,title string
  260,title CLEAR
  266,t 0
  278,title {}
  282,line 78
  error error
  271,t 0
  264,title HISTOGRAM
  266,line 20
  283,title {}
  278,line 57
  275,t 1
  error,line 35
  268,title PLOT
  258,t 0
  263,line 17
  error,title {}
  280,t 1
  279,t 1
  275,line 40
  273,title OVER
  263,t 0
  259,line 10
  260,line 14
  258,title float
  277,title {}
  272,line 28
  267,t 0
  263,title EXTENSION
  282,title {}
  272,t 0
  268,line 22
  267,title OPEN
  257 INT_
  281,line 73
  276,t 1
  258 REAL_
  259,t 0
  259 STRING_
  260 CLEAR_
  260,t 0
  272,title NEW
  261 CLOSE_
  265,line 19
  262 CURRENT_
  281,t 1
  263 EXTENSION_
  277,line 44
  257,title integer
  264 HISTOGRAM_
  264,t 0
  276,title {}
  265 IMAGE_
  262,line 16
  266 LOAD_
  267 OPEN_
  0,t 0
  0 {$}
  262,title CURRENT
  268 PLOT_
  268,t 0
  281,title {}
  274,line 36
  270 BAR_
  269 LINE_
  error,t 0
  271 SCATTER_
  272 NEW_
  258,line 8
  273,t 0
  273 OVER_
  266,title LOAD
  274 numeric
  275 command
  271,line 26
  276 @PSEUDO1
  277,t 1
  277 prism
  271,title SCATTER
  283,line 81
  278 ext
  261,t 0
  280 plot
  279 histogram
  281 type
  267,line 21
  282,t 1
  282 mode
  275,title {}
  283 start'
  265,t 0
  280,line 66
  279,line 61
  261,title CLOSE
}

proc prism::yyparse {} {
    variable yylval
    variable table
    variable rules
    variable token
    variable yycnt
    variable lr1_table
    variable token_id_table
    variable yyerr
    variable save_state

    set yycnt 0
    set state_stack {0}
    set value_stack {{}}
    set token ""
    set accepted 0
    set yyerr 0
    set save_state 0

    while {$accepted == 0} {
        set state [lindex $state_stack end]
        if {$token == ""} {
            set yylval ""
            set token [yylex]
            set buflval $yylval
	    if {$token>0} {
	        incr yycnt
            }
        }
        if {![info exists table($state:$token)] || $yyerr} {
	    if {!$yyerr} {
	        set save_state $state
	    }
            # pop off states until error token accepted
            while {[llength $state_stack] > 0 && \
                       ![info exists table($state:error)]} {
                set state_stack [lrange $state_stack 0 end-1]
                set value_stack [lrange $value_stack 0 \
                                       [expr {[llength $state_stack] - 1}]]
                set state [lindex $state_stack end]
            }
            if {[llength $state_stack] == 0} {
 
	        set rr { }
                if {[info exists lr1_table($save_state,trans)] && [llength $lr1_table($save_state,trans)] >= 1} {
                    foreach trans $lr1_table($save_state,trans) {
                        foreach {tok_id nextstate} $trans {
			    set ss $token_id_table($tok_id,title)
			    if {$ss != {}} {
			        append rr "$ss, "
                            }
                        }
                    }
                }
		set rr [string trimleft $rr { }]
		set rr [string trimright $rr {, }]
                yyerror "parse error, expecting: $rr"


                return 1
            }
            lappend state_stack [set state $table($state:error,target)]
            lappend value_stack {}
            # consume tokens until it finds an acceptable one
            while {![info exists table($state:$token)]} {
                if {$token == 0} {
                    yyerror "end of file while recovering from error"
                    return 1
                }
                set yylval {}
                set token [yylex]
                set buflval $yylval
            }
            continue
        }
        switch -- $table($state:$token) {
            shift {
                lappend state_stack $table($state:$token,target)
                lappend value_stack $buflval
                set token ""
            }
            reduce {
                set rule $table($state:$token,target)
                set ll $rules($rule,l)
                if {[info exists rules($rule,e)]} {
                    set dc $rules($rule,e)
                } else {
                    set dc $rules($rule,dc)
                }
                set stackpointer [expr {[llength $state_stack]-$dc}]
                setupvalues $value_stack $stackpointer $dc
                set _ $1
                set yylval [lindex $value_stack end]
                switch -- $rule {
                    1 { set _ $1 }
                    2 { set _ $1 }
                    4 { global ds9; if {!$ds9(init)} {YYERROR} else {yyclearin; YYACCEPT} }
                    6 { PrismDialog prism }
                    7 { PrismDialog prism }
                    8 { PrismCmdLoad $1 }
                    9 { PrismCmdLoad $2 }
                    10 { ProcessCmdCVAR0 PrismDestroy }
                    11 { ProcessCmdCVAR0 PrismClear }
                    13 { ProcessCmdCVAR0 PrismImage }
                    16 { PrismCmdRef $2 }
                    17 { PrismCmdExt $1 }
                    18 { PrismCmdExtName $1 }
                    19 { ProcessCmdCVAR3 col $1 num 20 plot,mode newplot }
                    20 { ProcessCmdCVAR3 col $1 num $2 plot,mode newplot }
                    21 { ProcessCmdCVAR3 col $1 num $2 plot,mode $3 }
                    22 { ProcessCmdCVAR0 PrismPlotGenerate }
                    23 { ProcessCmdCVAR6 xx $1 yy $2 xerr {} yerr {} plot,type scatter plot,mode newplot PrismPlotGenerate }
                    24 { ProcessCmdCVAR6 xx $1 yy $2 xerr {} yerr {} plot,type $3 plot,mode $4 PrismPlotGenerate }
                    25 { ProcessCmdCVAR6 xx $1 yy $2 xerr $3 yerr $4 plot,type scatter plot,mode newplot PrismPlotGenerate }
                    26 { ProcessCmdCVAR6 xx $1 yy $2 xerr $3 yerr $4 plot,type $5 plot,mode $6 PrismPlotGenerate }
                    27 { set _ line }
                    28 { set _ bar }
                    29 { set _ scatter }
                    30 { set _ newplot }
                    31 { set _ overplot }
                }
                unsetupvalues $dc
                # pop off tokens from the stack if normal rule
                if {![info exists rules($rule,e)]} {
                    incr stackpointer -1
                    set state_stack [lrange $state_stack 0 $stackpointer]
                    set value_stack [lrange $value_stack 0 $stackpointer]
                }
                # now do the goto transition
                lappend state_stack $table([lindex $state_stack end]:$ll,target)
                lappend value_stack $_
            }
            accept {
                set accepted 1
            }
            goto -
            default {
                puts stderr "Internal parser error: illegal command $table($state:$token)"
                return 2
            }
        }
    }
    return 0
}

######
# end autogenerated taccle functions
######

proc prism::yyerror {msg} {
     variable yycnt
     variable yy_current_buffer
     variable index_

     ParserError $msg $yycnt $yy_current_buffer $index_
}
